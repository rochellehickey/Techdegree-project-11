{"ast":null,"code":"var _jsxFileName = \"/Users/rochellehickey/Documents/Techdegree/Techdegree-project-11/src/components/PhotoContainer.js\";\nimport React from 'react';\nimport Photo from './Photo';\nimport NotFound from './NotFound';\n\nconst PhotoContainer = props => {\n  const results = props.data;\n  let photos;\n  /* If API returns any results, return Results title and accompanying photos */\n\n  if (results.length) {\n    /* Creating photos array by constructing the URLs from API results */\n    photos = results.map(photo => React.createElement(Photo, {\n      key: photo.id,\n      url: \"https://farm\".concat(photo.farm, \".staticflickr.com/\").concat(photo.server, \"/\").concat(photo.id, \"_\").concat(photo.secret, \".jpg\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }));\n    return React.createElement(\"div\", {\n      id: \"photo-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, \"Results for \", props.queryFromParent), photos);\n  } else {\n    /* If no results are return/match, display NotFound.js */\n    return React.createElement(\"div\", {\n      id: \"photo-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(NotFound, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }));\n  }\n};\n\nexport default PhotoContainer;","map":{"version":3,"sources":["/Users/rochellehickey/Documents/Techdegree/Techdegree-project-11/src/components/PhotoContainer.js"],"names":["React","Photo","NotFound","PhotoContainer","props","results","data","photos","length","map","photo","id","farm","server","secret","queryFromParent"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,MAAMC,cAAc,GAAGC,KAAK,IAAI;AAE9B,QAAMC,OAAO,GAAGD,KAAK,CAACE,IAAtB;AACA,MAAIC,MAAJ;AAEA;;AACA,MAAIF,OAAO,CAACG,MAAZ,EAAoB;AAClB;AACAD,IAAAA,MAAM,GAAGF,OAAO,CAACI,GAAR,CAAYC,KAAK,IAAI,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAEA,KAAK,CAACC,EAAlB;AAAsB,MAAA,GAAG,wBAAiBD,KAAK,CAACE,IAAvB,+BAAgDF,KAAK,CAACG,MAAtD,cAAgEH,KAAK,CAACC,EAAtE,cAA4ED,KAAK,CAACI,MAAlF,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAArB,CAAT;AACA,WACE;AAAK,MAAA,EAAE,EAAC,iBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAiBV,KAAK,CAACW,eAAvB,CADF,EAEGR,MAFH,CADF;AAMD,GATD,MASO;AACL;AACA,WACE;AAAK,MAAA,EAAE,EAAC,iBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD;AAEF,CAxBD;;AA0BA,eAAeJ,cAAf","sourcesContent":["import React from 'react';\nimport Photo from './Photo';\nimport NotFound from './NotFound';\n\nconst PhotoContainer = props => {\n\n  const results = props.data;\n  let photos;\n\n  /* If API returns any results, return Results title and accompanying photos */\n  if (results.length) {\n    /* Creating photos array by constructing the URLs from API results */\n    photos = results.map(photo => <Photo key={photo.id} url={`https://farm${photo.farm}.staticflickr.com/${photo.server}/${photo.id}_${photo.secret}.jpg`} />);\n    return(\n      <div id=\"photo-container\">\n        <h2>Results for {props.queryFromParent}</h2>\n        {photos}\n      </div>\n    );\n  } else {\n    /* If no results are return/match, display NotFound.js */\n    return(\n      <div id=\"photo-container\">\n        <NotFound />\n      </div>\n    );\n  }\n\n}\n\nexport default PhotoContainer;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/rochellehickey/Documents/Techdegree/Techdegree-project-11/src/components/Container.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport apiKey from '../config';\nimport PhotoContainer from './PhotoContainer';\n\nclass Container extends Component {\n  /* Set states for when photos are returned and when page is reloading */\n  constructor() {\n    super();\n\n    this.searchForPhotos = (query = \"bears\") => {\n      axios.get(\"https://api.flickr.com/services/rest/?method=flickr.photos.search&api_key=\".concat(apiKey, \"&text=\").concat(query, \"&per_page=12&sort=relevance&safe_search=1&format=json&nojsoncallback=1\"))\n      /* When results are received loading stops */\n      .then(response => {\n        this.setState({\n          photos: response.data.photos.photo,\n          loading: false\n        });\n      })\n      /* Any errors get logged to the console */\n      .catch(error => {\n        console.log(\"ERROR\", error);\n      });\n    };\n\n    this.state = {\n      photos: [],\n      loading: true\n    };\n  }\n  /* When the component mounts search for photos */\n\n\n  componentDidMount() {\n    this.searchForPhotos(this.props.match.params.query);\n    this.props.history.listen(location => this.searchForPhotos(location.pathname.slice(8)));\n  }\n  /* Send the search query to the Flickr API and get results */\n\n\n  render() {\n    /* When loading render 'Loading...' to the page or render results */\n    return React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, this.state.loading ? React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"Loading...\") : React.createElement(PhotoContainer, {\n      data: this.state.photos,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Container;","map":{"version":3,"sources":["/Users/rochellehickey/Documents/Techdegree/Techdegree-project-11/src/components/Container.js"],"names":["React","Component","axios","apiKey","PhotoContainer","Container","constructor","searchForPhotos","query","get","then","response","setState","photos","data","photo","loading","catch","error","console","log","state","componentDidMount","props","match","params","history","listen","location","pathname","slice","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;AAEA,MAAMC,SAAN,SAAwBJ,SAAxB,CAAkC;AAEhC;AACAK,EAAAA,WAAW,GAAG;AACZ;;AADY,SAedC,eAfc,GAeI,CAACC,KAAK,GAAG,OAAT,KAAqB;AACrCN,MAAAA,KAAK,CAACO,GAAN,qFAAuFN,MAAvF,mBAAsGK,KAAtG;AAEA;AAFA,OAGCE,IAHD,CAGMC,QAAQ,IAAI;AAChB,aAAKC,QAAL,CAAc;AACZC,UAAAA,MAAM,EAAEF,QAAQ,CAACG,IAAT,CAAcD,MAAd,CAAqBE,KADjB;AAEZC,UAAAA,OAAO,EAAE;AAFG,SAAd;AAID,OARD;AASA;AATA,OAUCC,KAVD,CAUOC,KAAK,IAAI;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,KAArB;AACD,OAZD;AAaD,KA7Ba;;AAEZ,SAAKG,KAAL,GAAa;AACXR,MAAAA,MAAM,EAAE,EADG;AAEXG,MAAAA,OAAO,EAAE;AAFE,KAAb;AAID;AAED;;;AACAM,EAAAA,iBAAiB,GAAG;AAClB,SAAKf,eAAL,CAAqB,KAAKgB,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBjB,KAA7C;AACA,SAAKe,KAAL,CAAWG,OAAX,CAAmBC,MAAnB,CAA0BC,QAAQ,IAAI,KAAKrB,eAAL,CAAqBqB,QAAQ,CAACC,QAAT,CAAkBC,KAAlB,CAAwB,CAAxB,CAArB,CAAtC;AACD;AAED;;;AAkBAC,EAAAA,MAAM,GAAG;AACP;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKV,KAAL,CAAWL,OAAX,GAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAtB,GAA8C,oBAAC,cAAD;AAAgB,MAAA,IAAI,EAAE,KAAKK,KAAL,CAAWR,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADjD,CADF;AAKD;;AA1C+B;;AA6ClC,eAAeR,SAAf","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport apiKey from '../config';\nimport PhotoContainer from './PhotoContainer';\n\nclass Container extends Component {\n\n  /* Set states for when photos are returned and when page is reloading */\n  constructor() {\n    super();\n    this.state = {\n      photos: [],\n      loading: true\n    };\n  }\n\n  /* When the component mounts search for photos */\n  componentDidMount() {\n    this.searchForPhotos(this.props.match.params.query);\n    this.props.history.listen(location => this.searchForPhotos(location.pathname.slice(8)));\n  }\n\n  /* Send the search query to the Flickr API and get results */\n  searchForPhotos = (query = \"bears\") => {\n    axios.get(`https://api.flickr.com/services/rest/?method=flickr.photos.search&api_key=${apiKey}&text=${query}&per_page=12&sort=relevance&safe_search=1&format=json&nojsoncallback=1`)\n\n    /* When results are received loading stops */\n    .then(response => {\n      this.setState({\n        photos: response.data.photos.photo,\n        loading: false\n      });\n    })\n    /* Any errors get logged to the console */\n    .catch(error => {\n      console.log(\"ERROR\", error);\n    });\n  };\n\n\n  render() {\n    /* When loading render 'Loading...' to the page or render results */\n    return(\n      <ul>\n        {this.state.loading ? (<h2>Loading...</h2>) : (<PhotoContainer data={this.state.photos} />)}\n      </ul>\n    );\n  }\n}\n\nexport default Container;"]},"metadata":{},"sourceType":"module"}